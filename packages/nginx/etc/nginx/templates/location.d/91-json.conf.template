# TODO: NGINX_LOCATION_PREFIX=/api/v1

# Serves data for public without requiring any authenticated.
# If data is not found, it returns a 200 status code with `data: null`.
location ~ ^(/api)?/v\d+/publistore/public/(?<doc_path>.*)$ {
  try_files /p/$doc_path.ajs @null_data;
}

# Serves all data to authenticated users.
# If data is not found, it returns a 200 status code with `data: null`.
location ~ ^(/api)?/v\d+/publistore/authenticated/(?<doc_path>.*)$ {
  if ($bearer_token = "") {
    return 401;
  }
  if (!-d /t/$bearer_token) {
    return 403;
  }

  try_files /a/$doc_path.ajs @null_data;
}

# Serves all data can be accessed using valid both user token and id.
# If data is not found, it returns a 200 status code with `data: null`.
location ~ ^(/api)?/v\d+/publistore/per-user/(?<doc_path>.*)$ {
  if ($bearer_token = "") {
    return 401;
  }
  if ($user_id = "") {
    return 401;
  }
  if (!-d /u/$user_id/token/$bearer_token) {
    return 403;
  }

  try_files /u/$user_id/$doc_path.ajs @null_data;
}

# Serves all data to each device id.
# If data is not found, it returns a 200 status code with `data: null`.
location ~ ^(/api)?/v\d+/publistore/device/(?<doc_path>.*)$ {
  if ($device_id = "") {
    return 401;
  }
  if (!-d /d/$device_id) {
    return 403;
  }

  try_files /d/$device_id/$doc_path.ajs @null_data;
}

# Serves all data to each device id.
# If data is not found, it returns a 200 status code with `data: null`.
location ~ ^(/api)?/v\d+/publistore/device/(?<doc_path>.*)$ {
  if ($bearer_token = "") {
    return 401;
  }
  if (!-d /t/$bearer_token) {
    return 403;
  }

  try_files /t/$bearer_token/$doc_path.ajs @null_data;
}

# Serves all data to authenticated users.
# If data is not found, it returns a 200 status code with `data: null`.
location ~ ^(/api)?/v\d+/publistore/authenticated/(?<doc_path>.*)$ {
  if ($bearer_token = "") {
    return 401;
  }
  if (!-d /t/$bearer_token.ajs) {
    return 403;
  }

  try_files /a/$doc_path.ajs @null_data;
}

location @null_data {
  default_type application/json;
  return 200 '{"ok": true, "data": null}';
}

# Deny locations containing /securage/
# location ~ /securage/ {
#   return 403;
# }

# Deny all unknown location
location / {
  deny all;
}
